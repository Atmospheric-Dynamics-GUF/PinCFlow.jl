"""
```julia
compute_orographic_mode(
    displm::AbstractFloat,
    wnk::AbstractFloat,
    wnl::AbstractFloat,
    uavg::AbstractFloat,
    vavg::AbstractFloat,
    rhoavg::AbstractFloat,
    bvsavg::AbstractFloat,
    fc::AbstractFloat,
    branch::Integer,
)
```

Compute the properties of an orographic-gravity-wave mode.

Calculates the intrinsic frequency, wavenumbers and wave-action density
of a gravity-wave mode generated by flow over topography, using linear
mountain-wave theory. The implemented formulas are as follows (where this method's arguments are represented by ``h_{\\mathrm{w}, \\alpha}``, ``k_{h, \\alpha}``, ``l_{h, \\alpha}``, ``u_h``, ``v_h``, ``\\overline{\\rho}_h``, ``N_h^2``, ``f`` and ``\\sigma``).

  - Intrinsic frequency:

    ```math
    \\widehat{\\omega}_\\alpha = \\sigma \\left|- k_{h, \\alpha} u_h - l_{h, \\alpha} v_h\\right|
    ```

  - Horizontal wavenumbers:

    ```math
    \\begin{align*}
        k_\\alpha & = \\sigma \\mathrm{sgn} \\left(- k_{h, \\alpha} u_h - l_{h, \\alpha} v_h\\right) k_{h, \\alpha},\\\\
        l_\\alpha & = \\sigma \\mathrm{sgn} \\left(- k_{h, \\alpha} u_h - l_{h, \\alpha} v_h\\right) l_{h, \\alpha}
    \\end{align*}
    ```
  - Vertical wavenumber:

    ```math
    m_\\alpha = - \\sigma \\sqrt{\\frac{\\left(k_\\alpha^2 + l_\\alpha^2\\right) \\left(N_h^2 - \\widehat{\\omega}_\\alpha^2\\right)}{\\widehat{\\omega}_\\alpha^2 - f^2}}
    ```
  - Wave-action density:

    ```math
    \\mathcal{A}_\\alpha = \\frac{\\overline{\\rho}_h}{2} \\frac{\\widehat{\\omega}_\\alpha \\left|\\boldsymbol{k}_\\alpha\\right|^2}{k_\\alpha^2 + l_\\alpha^2} \\left|h_{\\mathrm{w}, \\alpha}\\right|^2
    ```

If the squared intrinsic frequency is smaller than the squared Coriolis parameter or larger than the squared buoyancy frequency (and thus outside of the gravity-wave spectrum), the vertical wavenumber and wave-action density are set to zero.

# Arguments

  - `displm`: Topographic displacement.
  - `wnk`: Zonal wavenumber from the topographic spectrum.
  - `wnl`: Meridional wavenumber from the topographic spectrum.
  - `uavg`: Vertically averaged resolved zonal wind.
  - `vavg`: Vertically averaged resolved meridional wind.
  - `rhoavg`: Vertically averaged background density.
  - `bvsavg`: Vertically averaged squared buoyancy frequency.
  - `fc`: Coriolis parameter.
  - `branch`: Frequency branch.

# Returns

  - `::AbstractFloat`: Intrinsic frequency.
  - `::AbstractFloat`: Zonal wavenumber.
  - `::AbstractFloat`: Meridional wavenumber.
  - `::AbstractFloat`: Vertical wavenumber.
  - `::AbstractFloat`: Wave-action density.
"""
function compute_orographic_mode(
    displm::AbstractFloat,
    wnk::AbstractFloat,
    wnl::AbstractFloat,
    uavg::AbstractFloat,
    vavg::AbstractFloat,
    rhoavg::AbstractFloat,
    bvsavg::AbstractFloat,
    fc::AbstractFloat,
    branch::Integer,
)

    # Compute horizontal wavenumber.
    wnh = sqrt(wnk^2 + wnl^2)

    # Compute intrinsic frequency from orographic wavenumbers.
    omi = -uavg * wnk - vavg * wnl

    # Adjust the signs to be consistent with the chosen frequency
    # branch.
    if omi * branch < 0
        omi = -omi
        wnk = -wnk
        wnl = -wnl
    end

    # Compute vertical wavenumber and wave-action density.
    if omi^2 > fc^2 && omi^2 < bvsavg

        # Compute vertical wavenumber.
        wnm = -branch * sqrt(wnh^2 * (bvsavg - omi^2) / (omi^2 - fc^2))

        # Compute wave-action density.
        wad = rhoavg / 2 * displm^2 * omi * (wnh^2 + wnm^2) / wnh^2

        # Set to zero if something went wrong.
        if wad != wad || wnm != wnm
            wad = 0.0
            wnm = 0.0
        end

        # Account for critical and reflecting levels.
    else
        wad = 0.0
        wnm = 0.0
    end

    # Return.
    return (omi, wnk, wnl, wnm, wad)
end
